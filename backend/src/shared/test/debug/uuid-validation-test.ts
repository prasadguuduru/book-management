/**
 * UUID Validation Test
 * Tests the UUID validation logic against real UUIDs from the workflow service
 */

// Copy the validation function locally for testing
function isValidUUID(uuid: string): boolean {
    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    return uuidRegex.test(uuid);
}

function testUUIDs() {
    console.log('🔍 Testing UUID validation...');

    const testUUIDs = [
        // Real UUID from workflow service logs
        '135b5abe-641f-4309-a2ab-1b2c63645e59',

        // Test UUID that worked
        '12345678-1234-4123-8123-123456789012',

        // Generated by Node.js uuid v4
        require('uuid').v4(),
        require('uuid').v4(),
        require('uuid').v4()
    ];

    testUUIDs.forEach((uuid, index) => {
        const isValid = isValidUUID(uuid);
        console.log(`UUID ${index + 1}: ${uuid}`);
        console.log(`  Valid: ${isValid ? '✅' : '❌'}`);

        if (!isValid) {
            // Analyze why it failed
            const parts = uuid.split('-');
            console.log(`  Parts: ${parts.map((p: string) => p.length).join('-')} (should be 8-4-4-4-12)`);
            console.log(`  Version: ${parts[2]?.[0]} (should be 4)`);
            console.log(`  Variant: ${parts[3]?.[0]} (should be 8, 9, a, or b)`);
        }
        console.log('');
    });
}

testUUIDs();