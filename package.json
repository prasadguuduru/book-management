{
  "name": "ebook-publishing-platform",
  "version": "1.0.0",
  "description": "Enterprise-grade serverless ebook publishing platform with AWS Free Tier optimization",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "install:deps": "node scripts/install-dependencies.js",
    "setup": "npm run install:deps && npm run setup:local",
    "setup:local": "node scripts/setup-local.js && npm run db:create",
    "setup:dev": "docker-compose up -d && npm run localstack:wait && npm run db:create && npm run localstack:deploy",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "npm run dev --workspace=backend",
    "dev:frontend": "npm run dev --workspace=frontend",
    "build": "npm run build --workspace=backend && npm run build --workspace=frontend",
    "build:dev": "npm run build --workspace=backend && npm run build:dev --workspace=frontend",
    "build:prod": "npm run build --workspace=backend && npm run build:prod --workspace=frontend",
    "test": "npm run test --workspace=backend && npm run test --workspace=frontend",
    "test:coverage": "npm run test:coverage --workspace=backend && npm run test:coverage --workspace=frontend",
    "lint": "npm run lint --workspace=backend && npm run lint --workspace=frontend",
    "lint:fix": "npm run lint:fix --workspace=backend && npm run lint:fix --workspace=frontend",
    "type-check": "npm run type-check --workspace=frontend && tsc --noEmit --project backend/tsconfig.json",
    "localstack:start": "docker-compose up -d",
    "localstack:stop": "docker-compose down",
    "localstack:wait": "node scripts/wait-for-localstack.js",
    "localstack:health": "node scripts/check-localstack.js",
    "localstack:test": "node scripts/test-localstack.js",
    "localstack:troubleshoot": "node scripts/troubleshoot-localstack.js",
    "troubleshoot": "node scripts/troubleshoot-localstack.js",
    "localstack:logs": "docker-compose logs -f localstack",
    "localstack:deploy": "cd infrastructure && terraform init && terraform apply -auto-approve -var-file=environments/local/terraform.tfvars",
    "localstack:destroy": "cd infrastructure && terraform destroy -auto-approve -var-file=environments/local/terraform.tfvars",
    "localstack:reset": "npm run localstack:destroy && npm run localstack:deploy",
    "db:create": "node scripts/create-table.js",
    "db:setup": "npm run db:create && npm run seed:data",
    "seed:data": "node scripts/seed-mock-data.js",
    "clean": "rm -rf backend/dist frontend/dist node_modules backend/node_modules frontend/node_modules",
    "deploy:dev": "npm run build && node scripts/deploy.js dev",
    "deploy:staging": "npm run build && node scripts/deploy.js staging",
    "deploy:prod": "npm run build:prod && node scripts/deploy.js prod"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "typescript": "^5.2.2",
    "@types/node": "^20.9.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/ebook-publishing-platform.git"
  },
  "keywords": [
    "ebook",
    "publishing",
    "serverless",
    "aws",
    "typescript",
    "react",
    "terraform"
  ],
  "author": "Your Organization",
  "license": "MIT"
}