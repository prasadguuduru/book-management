version: '3.8'

services:
  # LocalStack for AWS Services emulation
  localstack:
    container_name: book-mgmt-localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"      # LocalStack edge endpoint
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG:-0}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR:-docker}
      - LAMBDA_REMOTE_DOCKER=false
      - AWS_DEFAULT_REGION=us-west-2
      - EDGE_PORT=4566
      - SERVICES=lambda,apigateway,dynamodb,s3,cloudfront,iam,logs
      - PERSISTENCE=1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_RUNTIME_ENVIRONMENT_TIMEOUT=60
      # Development convenience settings
      - LS_LOG=${LS_LOG:-warn}
      - ENFORCE_IAM=0  # Disable IAM for development
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./backend:/opt/code/backend"  # Mount backend code
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DynamoDB Admin UI
  dynamodb-admin:
    container_name: book-mgmt-dynamodb-admin
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
    depends_on:
      localstack:
        condition: service_healthy

  # Frontend Development Server
  frontend:
    container_name: book-mgmt-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:4566
      - REACT_APP_WS_URL=ws://localhost:4566
      - CHOKIDAR_USEPOLLING=true  # Enable hot reload on Windows/WSL
    depends_on:
      - backend-builder

  # Backend TypeScript Compiler (Watch Mode)
  backend-builder:
    container_name: book-mgmt-backend-builder
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run watch
    depends_on:
      localstack:
        condition: service_healthy

  # Lambda Deployer Service
  lambda-deployer:
    container_name: book-mgmt-lambda-deployer
    build:
      context: ./scripts
      dockerfile: Dockerfile.deployer
    volumes:
      - ./backend:/app/backend
      - ./scripts:/app/scripts
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-west-2
      - LOCALSTACK_ENDPOINT=http://localstack:4566
    depends_on:
      localstack:
        condition: service_healthy
      backend-builder:
        condition: service_completed_successfully

  # Development Tools Container
  devtools:
    container_name: book-mgmt-devtools
    build:
      context: .
      dockerfile: Dockerfile.devtools
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=us-west-2
      - LOCALSTACK_ENDPOINT=http://localstack:4566
    depends_on:
      - localstack

networks:
  default:
    name: book-mgmt-network
    driver: bridge

volumes:
  localstack-data:
    name: book-mgmt-localstack-data